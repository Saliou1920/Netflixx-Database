-- Creation de la table NETFLIX_ACTEURS qui enregistre le nom des acteurs.

CREATE TABLE NETFLIX_ACTEURS
( 
    ACTEUR_ID NUMBER(4) NOT NULL CONSTRAINT NETFLIX_ACTEURS_PK PRIMARY KEY ,
    SURNOM_ACTEUR VARCHAR2(50) NOT NULL,
    PRENOM_ACTEUR VARCHAR2(50) NOT NULL,
    
    CONSTRAINT NETFLIX_ACTEURS_UK1 UNIQUE (SURNOM_ACTEUR)
);

-- Sequence identification des lignes inseres dans la table NETFLIX_ACTEURS

CREATE SEQUENCE NETFLIX_ACTEURS_SEQ
    MINVALUE 1
    NOMAXVALUE
    START WITH 1
    INCREMENT BY 1
    NOCYCLE
    ORDER;
    
-- Table directeur film

CREATE TABLE NETFLIX_DIRECTEURS
( 
    DIRECTEUR_ID NUMBER(4) NOT NULL CONSTRAINT NETFLIX_DIRECTEURS_PK PRIMARY KEY ,
    SURNOM_DIRECTEUR VARCHAR2(50) NOT NULL,
    PRENOM_DIRECTEUR VARCHAR2(50) NOT NULL,
    
    CONSTRAINT NETFLIX_DIRECTEURS_UK1 UNIQUE (SURNOM_DIRECTEUR)
);

-- Sequence identification des lignes inseres dans la table NETFLIX_DIRECTEURS
CREATE SEQUENCE NETFLIX_DIRECTEURS_SEQ
    MINVALUE 1
    NOMAXVALUE
    START WITH 1
    INCREMENT BY 1
    NOCYCLE
    ORDER;

-- une table qui servira à enregistrer les films Netflix

CREATE TABLE NETFLIX_FILMS
( 
    FILM_ID NUMBER(4) NOT NULL CONSTRAINT NETFLIX_FILM_PK PRIMARY KEY ,
    TITRE VARCHAR2(100) NOT NULL,
    ANNEE_SORTIE NUMBER(4) NOT NULL,
    DURATION NUMBER(4) NOT NULL,
    DESCRIPTION VARCHAR2(4000) NOT NULL,
    
    CONSTRAINT NETFLIX_FILMS_UK1 UNIQUE (TITRE)
);

-- Sequence identification des lignes inseres dans la table NETFLIX_FILMS
CREATE SEQUENCE NETFLIX_FILMS_SEQ
    MINVALUE 1
    NOMAXVALUE
    START WITH 1
    INCREMENT BY 1
    NOCYCLE
    ORDER;

-- La table journaliere

CREATE TABLE NETFLIX_FILMS_JN
( 
    JN_OPERATION VARCHAR2(1) NOT NULL,
    JN_ORACLE_USER VARCHAR2(30) NOT NULL,
    JN_DATETIME DATE DEFAULT SYSTIMESTAMP NOT NULL,
    FILM_ID NUMBER(4) NOT NULL,
    OLD_TITRE VARCHAR2(100),
    NEW_TITRE VARCHAR2(100),
    OLD_ANNEE_SORTIE NUMBER(4),
    NEW_ANNEE_SORTIE NUMBER(4),
    OLD_DURAION NUMBER(4),
    NEW_DURAION NUMBER(4),
    OLD_DESCRIPTION VARCHAR2(4000),
    NEW_DESCRIPTION VARCHAR2(4000)
);

-- QUESTION

-- OUI on doit mettre une cle primaire sur la table journaliere
-- Parce que cela peut aider lors de la restauration des donnes

-- Table reference qui servira a enregistrer le directeur de chaque film
CREATE TABLE NETFLIX_DIRECTEURS_REF 
(
    DIRECTEUR_ID NUMBER(4) NOT NULL,
    FILM_ID NUMBER(4) NOT NULL,
    
    CONSTRAINT NETFLIX_DIRECTEURS_REF_PK PRIMARY KEY (DIRECTEUR_ID, FILM_ID),
    FOREIGN KEY (DIRECTEUR_ID) REFERENCES NETFLIX_DIRECTEURS(DIRECTEUR_ID),
    FOREIGN KEY (FILM_ID) REFERENCES NETFLIX_FILMS(FILM_ID)
);

-- table de référence qui servira à enregistrer les acteurs de chaque film.

CREATE TABLE NETFLIX_ACTEURS_REF 
(
    ACTEUR_ID NUMBER(4) NOT NULL,
    FILM_ID NUMBER(4) NOT NULL,
    
    CONSTRAINT NETFLIX_ACTEURS_REF_PK PRIMARY KEY (ACTEUR_ID, FILM_ID),
    FOREIGN KEY (ACTEUR_ID) REFERENCES NETFLIX_ACTEURS(ACTEUR_ID),
    FOREIGN KEY (FILM_ID) REFERENCES NETFLIX_FILMS(FILM_ID)
);

-- Vue

CREATE VIEW NETFLIX_DETAILS_V1 AS
SELECT TITRE, ANNEE_SORTIE,DURATION,DESCRIPTION, SURNOM_DIRECTEUR, PRENOM_DIRECTEUR,
        SURNOM_ACTEUR, PRENOM_ACTEUR
FROM NETFLIX_FILMS a, NETFLIX_DIRECTEURS b, NETFLIX_ACTEURS c, NETFLIX_ACTEURS_REF d, NETFLIX_DIRECTEURS_REF e 
WHERE c.ACTEUR_ID = d.ACTEUR_ID AND d.FILM_ID = a.FILM_ID AND a.FILM_ID = e.FILM_ID AND 
      e.DIRECTEUR_ID = b.DIRECTEUR_ID;



select * from netflix_films_jn;

-- Declencheurs

CREATE OR REPLACE TRIGGER NETFLIX_FILMS_TR1
   AFTER INSERT OR UPDATE OR DELETE ON NETFLIX_FILMS
   FOR EACH ROW
   DECLARE
      JN_ORACLE_USER VARCHAR2(30) ;
      --JN_OPERATION NETFLIX_FILMS_JN.JN_OPERATION%TYPE;
   BEGIN
    SELECT USER INTO JN_ORACLE_USER FROM dual;
      --Insert
      IF INSERTING THEN
         INSERT INTO NETFLIX_FILMS_JN (
                JN_OPERATION,
                JN_ORACLE_USER,
                JN_DATETIME,
                FILM_ID,
                NEW_TITRE,
                NEW_ANNEE_SORTIE,
                NEW_DURAION,
                NEW_DESCRIPTION
            )
            VALUES (
                'I',
                JN_ORACLE_USER,
                SYSDATE,
                :NEW.FILM_ID,
                :NEW.TITRE,
                :NEW.ANNEE_SORTIE, 
                :NEW.DURATION,
                :NEW.DESCRIPTION
            );
   -- Delete
      ELSIF DELETING THEN
         INSERT INTO NETFLIX_FILMS_JN (
                JN_OPERATION,
                JN_ORACLE_USER,
                JN_DATETIME,
                FILM_ID,
                OLD_TITRE,
                OLD_ANNEE_SORTIE,
                OLD_DURAION,
                OLD_DESCRIPTION
        )
        VALUES (
                'D',
                JN_ORACLE_USER,
                SYSDATE,
                :OLD.FILM_ID,
                :OLD.TITRE,
                :OLD.ANNEE_SORTIE,
                :OLD.DURATION,
                :OLD.DESCRIPTION
            );
   -- Update
      ELSE
         INSERT INTO NETFLIX_FILMS_JN
            VALUES (
                'U', 
                JN_ORACLE_USER, 
                SYSDATE,
                :NEW.FILM_ID,
                :OLD.TITRE, 
                :NEW.TITRE, 
                :OLD.ANNEE_SORTIE, 
                :NEW.ANNEE_SORTIE, 
                :OLD.DURATION,
                :NEW.DURATION, 
                :OLD.DESCRIPTION, 
                :NEW.DESCRIPTION
            );

      END IF;
END;

-- Insertion des donnees dans les tableaux NETFLIX_FILMS, NETFLIX_ACTEURS, NETFLIX_DIRECTEURS

-- FILM #1
INSERT INTO NETFLIX_FILMS (FILM_ID,TITRE,ANNEE_SORTIE, DURATION, DESCRIPTION) VALUES (NETFLIX_FILMS_SEQ.nextval,
    'Philadelphia', 1993, 126,'Philadelphia attorney Andrew Beckett launches a wrongful termination suit 
    against his law firm when they fire him because he''s gay and HIV-positive.');

INSERT INTO NETFLIX_ACTEURS (ACTEUR_ID,SURNOM_ACTEUR,PRENOM_ACTEUR) VALUES (NETFLIX_ACTEURS_SEQ.nextval,'Hanks', 'Tom');
INSERT INTO NETFLIX_ACTEURS (ACTEUR_ID,SURNOM_ACTEUR,PRENOM_ACTEUR) VALUES (NETFLIX_ACTEURS_SEQ.nextval,'Washington', 'Denzel');
INSERT INTO NETFLIX_ACTEURS (ACTEUR_ID,SURNOM_ACTEUR,PRENOM_ACTEUR) VALUES (NETFLIX_ACTEURS_SEQ.nextval,'Robards', 'Jason');

INSERT INTO NETFLIX_DIRECTEURS (DIRECTEUR_ID,SURNOM_DIRECTEUR,PRENOM_DIRCTEUR) VALUES (NETFLIX_DIRECTEURS_SEQ.nextval,'Demme','Jonathan');

-- FILM #2
INSERT INTO NETFLIX_FILMS (FILM_ID,TITRE,ANNEE_SORTIE, DURATION, DESCRIPTION) VALUES (NETFLIX_FILMS_SEQ.nextval,
    'The Book of Eli', 2010, 118,'Determined to protect a sacred text that promises to save humanity, Eli goes
        on a quest westward across the barren, postapocalyptic country.');

INSERT INTO NETFLIX_ACTEURS (ACTEUR_ID,SURNOM_ACTEUR,PRENOM_ACTEUR) VALUES (NETFLIX_ACTEURS_SEQ.nextval,'Washington', 'Denzel');
INSERT INTO NETFLIX_ACTEURS (ACTEUR_ID,SURNOM_ACTEUR,PRENOM_ACTEUR) VALUES (NETFLIX_ACTEURS_SEQ.nextval,'Oldman', 'Gary');
INSERT INTO NETFLIX_ACTEURS (ACTEUR_ID,SURNOM_ACTEUR,PRENOM_ACTEUR) VALUES (NETFLIX_ACTEURS_SEQ.nextval,'Kunis', 'Mila');

INSERT INTO NETFLIX_DIRECTEURS (DIRECTEUR_ID,SURNOM_DIRECTEUR,PRENOM_DIRCTEUR) VALUES (NETFLIX_DIRECTEURS_SEQ.nextval,'Demme','Jonathan');



























































